version: '3.8'

services:
    dev:
        container_name: nestjs_api_dev
        image: nestjs-api-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:dev
        ports:
            - 3000:3000
        env_file:
            - .env
        networks:
            - nestjs-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        depends_on:
            - mongodb

    mongodb:
        image: mongo:latest
        container_name: nestjs_api_mongodb
        ports:
            - 27017:27017
        volumes:
            - ./data:/data/db
            - ./mongo-entrypoint/:/docker-entrypoint-initdb.d/
        env_file: .env
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
            MONGO_USERNAME: ${MONGO_USERNAME}
            MONGO_PASSWORD: ${MONGO_PASSWORD}
            MONGO_DATABASE: ${MONGO_DATABASE}
        networks:
            - nestjs-network
        restart: unless-stopped
    
    prod:
        container_name: nestjs_api_prod
        image: nestjs-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
        env_file:
            - .env
        networks:
            - nestjs-network
        volumes:
            - /usr/src/app/node_modules
        restart: unless-stopped
        depends_on:
            - mongodb

networks:
    nestjs-network:

volumes:
    data: